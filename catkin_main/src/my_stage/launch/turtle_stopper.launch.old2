<launch>
	<!-- Settings / Map files -->
	<arg name="map_file" default="$(find my_stage)/world/maze.yaml" />
	<arg name="world_file" default="$(find my_stage)/world/maze.world" />
	<arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, rhoomba -->
	<arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
	<arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR asus_xtion_pro)"/>  <!-- kinect, asus_xtion_pro -->

	<!-- Make the stage map available to ROS nodes -->
    	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" respawn="false">
        	<param name="frame_id" value="/map" />
    	</node>

	<!-- Provide the exact position of our robot in stage to ROS nodes -->
        <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false" output="screen">
          <param name="odom_frame_id" value="odom" />
          <param name="base_frame_id" value="base_link" />
        </node>

	<!-- Load the turtlebot robot model for RViz et al. -->
	<include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
		<arg name="base" value="$(arg base)" />
		<arg name="stacks" value="$(arg stacks)" />
		<arg name="3d_sensor" value="$(arg 3d_sensor)" />
	</include>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="false"/>
	</node>

	<!-- Start the actual simulator -->
	<node name="stage" pkg="stage_ros" type="stageros" args="$(arg world_file)">
		<!-- Map the default laser scan to rplidar -->
		<remap from="base_scan_1" to="base_scan" />
	</node>

	<!-- Let the simulated robot do something -->
	<node name="stopper" pkg="my_stage" type="stopper" output="screen" />
</launch>
